---
export interface Props {
	text: string,
    link: string,
    drop_link?: Array<Array<string>> 
}

const { text, link, drop_link = [] } = Astro.props;
---
<li class="nav-ele">
    <div style="display: flex;justify-content: space-between;flex-direction: row-reverse;">
    <slot/>
    
    <a class='main-link' href={link}>{text}</a>
</div>
    <div class="dropdown-content">
        {drop_link.map((data) => {return <a href={data[0]}>{data[1]}</a>})}
    </div>

</li>
<style>
    @media only screen and (max-width: 800px){
        
    }
    .main-link{
        color: var(--navbar-font-color);
        text-decoration: none;
        display: inline-flex;
        padding-bottom: 1rem;
        position: relative;
    }
    .nav-ele {
        padding-top: 1rem;
        text-decoration: none;
        position: relative;
    }
    
    li:hover{
        .nav-ele a::after{
            content: ' ';
            /* position: absolute; */
            background-color: red;
            width: 100%;
            overflow: hidden;
        }
    }
    
    

.dropdown-content {
  display: none;
  position: absolute;
  background-color: #f9f9f9;
  min-width: 160px;
  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
  z-index: 1;
}

.nav-ele:hover .dropdown-content {
  display: block;
}

.nav-ele:hover {
    & > a{
        color: white;
    }
}

.dropdown-content a {
  float: none;
  color: black;
  padding: 12px 16px;
  text-decoration: none;
  display: block;
  text-align: right;
}
</style>